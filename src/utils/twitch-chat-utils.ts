// region Generated types

// Generated by https://quicktype.io

export type AbstractrrrEvent = AuthEvent | IRCEvent

export interface AuthEvent {
  event_type: "auth"
  event_data: {
    auth_data: {
      authenticated: boolean;
    };
    meta: {
      request_id: string;
    };
  }
}

export interface IRCEventPing {
  irc_type: "PingMessage";
  irc_data: {
    raw: string;
    type: number;
    raw_type: string;
    message: string;
  };
}

export interface IRCEventClearChat {
  irc_type: "ClearChatMessage"
  irc_data: IRCEventClearChatData
}

export interface IRCEventClearChatData {
  raw: string;
  type: number;
  raw_type: "CLEARCHAT";
  ban_duration: number;
  target_user_id: string;
  target_username: string;
}

export interface IRCEventPong {
  irc_type: "PongMessage";
  irc_data: {
    raw: string;
    type: number;
    raw_type: string;
    message: string;
  };
}

export interface IRCEventPrivateMessage {
  irc_type: "PrivateMessage";
  irc_data: IRCData;
}

export type IRCEvent = {
  event_type: "irc"
  event_data: IRCEventPrivateMessage | IRCEventPong | IRCEventPing | IRCEventClearChat;
};

export interface IRCData {
  user: User;
  raw: string;
  type: number;
  raw_type: string;
  tags: { [key: string]: string };
  message: string;
  channel: string;
  room_id: string;
  id: string;
  time: string;
  emotes: null;
  bits: number;
  action: boolean;
  first_message: boolean;
  reply: null;
  custom_reward_id: string;
}

export interface User {
  id: string;
  name: string;
  display_name: string;
  color: string;
  badges: Badges;
}

export interface Badges {
  broadcaster?: number;
  subscriber?: number;
  moderator?: number;
  vip?: number;
}

// endregion Generated types


// region UI types

export type TwitchChatMessage = {
  username: string
  color: string
  subBadgeUrl: string | null
  broadcaster: boolean
  moderator: boolean
  vip: boolean
  pronouns: string | null
  message: string // TODO: inject nodes??
}

// endregion UI types


export const ircDataToTwitchChatMessage = (data: IRCData): TwitchChatMessage => ({
  username: data.user.display_name,
  color: data.tags.color || "#fff",
  message: data.message,
  broadcaster: data.user.badges.broadcaster === 1,
  moderator: data.user.badges.moderator === 1,
  vip: data.user.badges.vip === 1,
  subBadgeUrl: null, // todo:
  pronouns: null, // todo:
})